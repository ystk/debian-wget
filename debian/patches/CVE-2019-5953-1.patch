From 692d5c5215de0db482c252492a92fc424cc6a97c Mon Sep 17 00:00:00 2001
From: Tim Ruehsen <tim.ruehsen@gmx.de>
Date: Fri, 5 Apr 2019 11:50:44 +0200
Subject: Fix a buffer overflow vulnerability

* src/iri.c(do_conversion): Reallocate the output buffer to a larger
  size if it is already full
---
 src/iri.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

Index: wget-1.16/src/iri.c
===================================================================
--- wget-1.16.orig/src/iri.c	2019-04-17 15:27:25.149341697 +0200
+++ wget-1.16/src/iri.c	2019-04-17 16:00:00.697315270 +0200
@@ -138,8 +138,11 @@
   *out = s = xmalloc (outlen + 1);
   done = 0;
 
+  DEBUGP (("iconv %s -> %s\n", tocode, fromcode));
+ 
   for (;;)
     {
+      DEBUGP (("iconv outlen=%d inlen=%d\n", outlen, inlen));
       if (iconv (cd, &in, &inlen, out, &outlen) != (size_t)(-1))
         {
           *out = s;
@@ -166,17 +169,16 @@
         }
       else if (errno == E2BIG) /* Output buffer full */
         {
-          char *new;
+          logprintf (LOG_VERBOSE,
+                    _("Reallocate output buffer len=%d outlen=%d inlen=%d\n"), len, outlen, inlen);
 
           tooshort++;
           done = len;
-          outlen = done + inlen * 2;
-          new = xmalloc (outlen + 1);
-          memcpy (new, s, done);
-          xfree (s);
-          s = new;
-          len = outlen;
-          *out = s + done;
+
+          len = done + inlen * 2;
+          s = xrealloc (s, len + 1);
+          *out = s + done - outlen;
+          outlen += inlen * 2;
         }
       else /* Weird, we got an unspecified error */
         {
